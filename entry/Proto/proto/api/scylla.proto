syntax = "proto3";
package api;
import "google/protobuf/descriptor.proto";
option go_package = "wcs/api";
option java_package = "com.teneasyChat.api";

message SimpleStrategy {
  int32 replication_factor = 1;
}

message NetworkTopologyStrategy {
  // key: 数据中心名称, value: 副本因子
  map<string, int32> replication_factor = 1;
}

message KeySpaceOption {
  string name = 1;
  oneof strategy {
    SimpleStrategy ss = 2;
    NetworkTopologyStrategy nts = 3;
  }

  optional bool durable_writes = 4;
}

// https://docs.scylladb.com/stable/cql/ddl.html#tombstones-gc-options
enum TombstoneGCMode {
  TIMEOUT = 0;
  REPAIR = 1;
  DISABLED = 2;
  IMMEDIATE = 3;
}

// https://docs.scylladb.com/stable/cql/ddl.html#speculative-retry-options
// 单副本模式下使用使用会报错: ServerError: sstring out of range
message SpeculativeRetry {
  oneof options {
    // 0-100, 百分比
    double percentile = 1;
    int64 milliseconds = 2;
    bool always = 3;
    bool none = 4;
  }
}

// https://docs.scylladb.com/stable/cql/compaction.html#size-tiered-compaction-strategy-stcs
// 所有策略默认值均参考官方(即不指定则使用官方参数)
message STCS {
  optional double bucket_high = 1;
  optional double bucket_low = 2;
  optional int64 min_sstable_size = 3;
  optional int64 min_threshold = 4;
  optional int64 max_threshold = 5;
}

message LCS {
  optional int64 sstable_size_in_mb = 1;
}

message ICS {
  optional double bucket_high = 1;
  optional double bucket_low = 2;
  optional int64 min_sstable_size = 3;
  optional int64 min_threshold = 4;
  optional int64 max_threshold = 5;
  optional int64 sstable_size_in_mb = 6;
  optional double space_amplification_goal = 7;
}

enum CompactionWindowUnit {
  DAYS = 0;
  HOURS = 1;
  MINUTES = 2;
}

message TWCS {
  optional CompactionWindowUnit compaction_window_unit = 1;
  optional int64 compaction_window_size = 2;
  optional int64 expired_sstable_check_frequency_seconds = 3;
  optional int64 min_threshold = 4;
  optional int64 max_threshold = 5;
}

// https://docs.scylladb.com/stable/cql/ddl.html#compaction-options
message CompactionMode {
  oneof mode {
    STCS stcs = 1;
    LCS lcs = 2;
    ICS ics = 3;
    TWCS twcs = 4;
  }
}

enum CompressionMode {
  LZ4Compressor = 0;
  SnappyCompressor = 1;
  DeflateCompressor = 2;
}

// https://docs.scylladb.com/stable/cql/ddl.html#compression-options
message CompressionOption {
  optional CompressionMode sstable_compression = 1;
  optional int64 chunk_length_in_kb = 2;
}

message CDCOption {
  optional bool enabled = 1;
  optional bool preimage = 2;
  optional int64 ttl_sec = 3;
}

message PrimaryKey {
  repeated string part_key = 13;
  repeated string sort_key = 14;
}

message MaterializedView {
  // 不显式指定的情况下, 将使用 table_name_by_part_key 作为规则
  optional string name = 1;
  PrimaryKey primary_key = 2;
  optional TableNativeOption option = 3;
}

// https://docs.scylladb.com/stable/cql/ddl.html#other-table-options
message TableNativeOption {
  optional string comment = 1;
  optional double read_repair_chance = 2;
  optional double dclocal_read_repair_chance = 3;
  optional SpeculativeRetry speculative_retry = 4;
  // https://docs.scylladb.com/stable/cql/ddl.html#ddl-tombstones-gc
  optional int64 gc_grace_seconds = 5;
  optional TombstoneGCMode tombstone_gc = 6;
  optional double bloom_filter_fp_chance = 7;
  // seconds
  optional int64 default_time_to_live = 8;
  optional CompactionMode compaction = 9;
  optional CompressionOption compress = 10;
  // https://docs.scylladb.com/stable/cql/ddl.html#cql-caching-options
  optional bool caching = 11;
  optional CDCOption cdc = 12;
  // 排序
  repeated ClusteringOrderBy clustering_order_by = 13;
}

enum OrderBy {
  OB_AES = 0;
  OB_DESC = 1;
}

message ClusteringOrderBy {
  string sort_key = 1;
  OrderBy order_by = 2;
}

message TableOption {
  // 可选,不指定将使用message名称作为表名
  optional string name = 1;
  optional TableNativeOption option = 2;
  // 分区键, 聚集键, 次级索引
  // 如不设置分区键, 将会解析为user defined type
  optional PrimaryKey primary_key = 3;
  repeated MaterializedView mv = 4;
  // 本地次级索引, 自动补全part_key
  repeated string local_secondary_index = 5;
  // 全局次级索引, 性能较 local_secondary_index 弱
  repeated string global_secondary_index = 6;
}

// 基础类型未显式声明则按下方类型对应关系:
// NT_INT = [u]int32, sint32, fixed32, sfixed32
// NT_BIG_INT = [u]int64, sint64, fixed64, sfixed64
// NT_DOUBLE = double
// NT_FLOAT = float
// NT_BOOLEAN = bool
// NT_VARCHAR = string
// NT_BLOB = bytes
// NT_TIMESTAMP = google.protobuf.timestamp
enum NativeType {
  NT_UNKNOWN = 0;

  NT_BOOLEAN = 1;

  NT_TINY_INT = 2;
  NT_SMALL_INT = 3;
  NT_INT = 4;
  NT_BIG_INT = 5;
  NT_VAR_INT = 6;

  NT_COUNTER = 7;

  NT_DECIMAL = 8;
  NT_FLOAT = 9;
  NT_DOUBLE = 10;

  NT_DURATION = 11;
  NT_DATE = 12;
  NT_TIME = 13;
  NT_TIMESTAMP = 14;

  NT_UUID = 15;
  NT_TIME_UUID = 16;

  NT_ASCII = 17;
  NT_VARCHAR = 18;
  NT_BLOB = 19;

  NT_INET = 20;
}

// 字段暂不支持 repeated map, 对应类型[collections](https://docs.scylladb.com/stable/cql/types.html#collections)
message FieldOption {
  // 可选,不指定将使用字段名称作为列名
  optional string name = 1;
  oneof ty {
    NativeType base = 2;
    // user defined type, 多数情况下无需显式指定
    string udt = 3;
  }
  // true: 不持久化到数据库, 作为模型临时字段
  optional bool exclude = 4;
}

// pb文件对应keyspace
extend google.protobuf.FileOptions {
  KeySpaceOption key_space = 53000;
}

// message对应table
extend google.protobuf.MessageOptions {
  TableOption table = 53000;
}

// field对应column
extend google.protobuf.FieldOptions {
  FieldOption field = 53000;
}
