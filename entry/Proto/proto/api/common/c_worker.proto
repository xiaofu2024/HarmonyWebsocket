syntax = "proto3";
package api.common;

option go_package = "wcs/api/common;common";
option java_package = "com.teneasyChat.api.common";

import "api/common/c_base.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

// 老用户分配机制
enum DistributionType {
  // 空闲
  DISTRIBUTION_LEISURE = 0;
  // 繁忙
  DISTRIBUTION_BUSY = 1;
  // 离线
  DISTRIBUTION_OFFLINE = 2;
  // 未登录
  DISTRIBUTION_NOT_LOGIN = 3;
}

// 客服权限
enum WorkerPermission {
  WORKER_PERM_NONE = 0;
  // 商户顶级账户, 创建商户时设置, 只读
  WORKER_PERM_TOP = 1;
  // 管理员
  WORKER_PERM_ADMIN = 2;
  // 主管
  WORKER_PERM_LEADER = 4;
  // 一线客服
  WORKER_PERM_FRONTER = 8;
  // 转接客服
  WORKER_PERM_TRANSFER = 16;
  // 可搜索
  WORKER_PERM_SEARCHER = 32;
  // 可拉黑名单
  WORKER_PERM_BLACKER = 64;
}

enum ConnectState {
  CONNECT_STATE_OFFLINE = 0;
  CONNECT_STATE_ONLINE = 1;
}

enum OnlineState {
  // 空闲
  ONLINE_STATE_IDLE = 0;
  // 忙碌
  ONLINE_STATE_BUSY = 1;
  // away from keyboard
  ONLINE_STATE_AFK = 2;
}

enum WorkerState {
  // 未登录
  WORKER_OFFLINE  = 0;
  // 就绪
  WORKER_READY    = 1;
  // 忙碌
  WORKER_BUSY     = 2;
  // 链接断开
  WORKER_LOST     = 3;
}

enum WorkerEventType {
  // 客服建立链接
  WORKER_EVENT_ONLINE = 0;
  // 收到客服PING
  WORKER_EVENT_PING   = 1;
  // 客服链接错误
  WORKER_EVENT_ERROR  = 2;
  // 客服切换到离开状态
  WORKER_EVENT_AWAY   = 3;
  // 客服切换到繁忙状态
  WORKER_EVENT_BUSY   = 4;
  // 客服退出登录
  WORKER_EVENT_LOGOUT  = 5;
}

// kafka 客服事件队列存储消息类型
message WorkerEvent {
  // 商户ID
  int32 tenant_id     = 1;
  // 客户ID
  int32 worker_id     = 2;
  // 链接ID
  uint64 socket_id    = 3;
  // 网关ID
  int32 gateway_id    = 6;
  // 客户事件类型
  WorkerEventType event_type  = 4;
  // 客户事件错误码
  int32 event_code    = 5;
}

message Worker {
  int32 worker_id = 1;
  string account = 2;
  // 所在的组
  repeated WorkerGroup group = 3;
  // 权限掩码, 前端理解有困难的话 随时可调
  int32 perm_mask = 4;
  // 客服名
  string name = 5;
  // 头像url
  string avatar = 6;
  // 在线状态
  common.OnlineState online_state = 7;
  // 密码
  string password = 8;
  // 登录/未登录
  common.ConnectState connect_state = 9;
  // 商户ID
  int32 tenant_id = 10;

  // 云信Id
  string worker_nimid = 11;
  // 云信session
  string worker_nimsession = 12;
  //是否已经注册nim true需要，false 不需要
  bool bneednim = 13;
  // 二级分组
  repeated WorkerGroup group_child = 14;
  string  tips =15;
  repeated uint32 consult_ids =16; //所属咨询类型id
  // 删除时间（依次判断是否已删除）
  google.protobuf.Timestamp delete_at = 17;
  // 创建时间
  google.protobuf.Timestamp create_at = 18;
  // 更新时间
  google.protobuf.Timestamp update_at = 19;
  // 删除状态
  DisableStatus disable_status = 20;
}

message WorkerGroup {
  int64 id = 1;
  string name = 2;
  int32 priority = 3;
  int32 count = 4;
  int64 parentId =5;
  int32 ratio = 6[(validate.rules).int32 = {gte:0,lte:100}];
  uint32 consult_id = 7;
  // 删除时间（依次判断是否已删除）
  google.protobuf.Timestamp delete_at = 8;
  // 删除状态
  DisableStatus disable_status = 9;
}

message Distribution {
  int64 id = 1;
  string name = 2;
  int32 priority = 3;
}

message TenantClique {
  int32 id = 1;
  string name = 2;
  int32 priority = 3;
}

message ApplyWorkerState {
  int32  id =1;
  int32  tenant_id =2;
  int32  worker_id =3;
  string name = 4;
  string worker_group_name =5;
  string worker_group_child_name =6;
  common.OnlineState online_state_now =7;
  common.OnlineState online_state_apply =8;
  int32  apply_state =9;
  int64  apply_time =10;
  int64  check_time =11;
  string update_username =12;
}
