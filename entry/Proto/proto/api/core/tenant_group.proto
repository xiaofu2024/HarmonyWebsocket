syntax = "proto3";
package api.core;

option go_package = "wcs/api/core;core";
option java_package = "com.teneasyChat.api.core";
import "api/option.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "api/common/c_worker.proto";
import "api/common/c_base.proto";

option(api.info) = {
  authors: ["jeff"],
  date: "2023-03-14",
};

message TenantCliqueQueryResponse {
  repeated common.TenantClique clique = 1;
}

message TenantCliqueCreateRequest {
  common.TenantClique clique = 1[(validate.rules).message.required = true];
}

message TenantCliqueCreateResponse {
  common.TenantClique clique = 1;
}

message TenantCliqueUpdateRequest {
  common.TenantClique clique = 1[(validate.rules).message.required = true];
}

message TenantCliqueDeleteRequest {
  int32 clique_id = 1[(validate.rules).int32.gt = 0];
}

service TenantClique {
  option (api.service) = {
    path: "/tenant",
    auth: [AUTH_ROLE_ADMIN],
    tags: ["tenant"],
  };

  // 查询所有商户组
  rpc Query(google.protobuf.Empty) returns (TenantCliqueQueryResponse){
    option (api.method) = {
      id: 1300,
      path: "clique-query",
      ready: true,
      date: "2023-03-14"
    };
  }

  // 创建商户组
  rpc Create(TenantCliqueCreateRequest) returns (TenantCliqueCreateResponse){
    option (api.method) = {
      id: 1301,
      path: "clique-create",
      ready: true,
      date: "2023-03-14"
    };
  }

  // 修改商户组
  rpc Update(TenantCliqueUpdateRequest) returns (google.protobuf.Empty){
    option (api.method) = {
      id: 1302,
      path: "clique-update",
      ready: true,
      date: "2023-03-14"
    };
  }

  // 删除商户组
  rpc Delete(TenantCliqueDeleteRequest) returns (google.protobuf.Empty){
    option (api.method) = {
      id: 1303,
      path: "clique-delete",
      ready: true,
      date: "2023-03-14"
    };
  }
}
