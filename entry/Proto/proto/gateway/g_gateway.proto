syntax = "proto3";
package gateway;

option go_package = "wcs/service/gateway/protocol;protocol";
option java_package = "com.teneasyChat.gateway";

import "google/protobuf/timestamp.proto";
import "api/common/c_message.proto";
import "api/common/c_worker.proto";
import "api/common/c_chat.proto";

// 登录成功后, 下发必须信息
message SCHi {
  int64 id = 1;
  // 下面均为 h5/web 使用
  string token = 2;
  // 绑定客服(如果有的话)
  int32 worker_id = 3;
  int64 chat_expire_time = 4;
}

message CSForward {
  string appId = 1;
  string url = 2;
  string verb = 3;
  bytes data = 4;
}

message SCForward {
  string err = 2;
  bytes data = 3;
}

// 发消息
message CSSendMessage {
  api.common.Message msg = 1;
}

// 发消息确认
message SCSendMessage {
  int64 chat_id = 1;
  int64 msg_id = 2;
  google.protobuf.Timestamp msg_time = 3;
  string err_msg = 4;  //错误消息

}

// 收消息
message SCRecvMessage {
  api.common.Message msg = 1;
  int64 target = 2;
}

// 收消息确认
message CSRecvMessage {
  int64 chat_id = 1;
  int64 msg_id = 2;
}

// 读消息
message CSReadMessage {
  int64 chat_id = 1;
  int64 msg_id = 2;
}

message SCReadMessage {
  int64 chat_id = 1;
  int64 msg_id = 2;
}

// 正在输入(发送):开始
message InputtingBegin {
  // 无需处理
  int64 self = 1;
  // 终端用户无需处理, 客服传指定目标用户的clientId
  int64 target = 2;
  api.common.MessageFormat msg_fmt = 3;
}

// 正在输入(发送):结束
// 注意: MSG_TEXT, MSG_GEO 无需调用
message InputtingEnd {
  // 无需处理
  int64 self = 1;
  // 终端用户无需处理, 客服传指定目标用户的clientId
  int64 target = 2;
}

// 转接客服操作, 通知给 新的客服 + 用户
message WorkerTransfer {
  api.common.Message msg = 1;
}

// 聊天会话发生改变:
// from: 触发 onDelSession(从组中移除会话), -1时无视
// to: 触发 onNewSession(向组中添加会话), -1时无视
message SCChatChanged {
  api.common.ChatState from = 1;
  api.common.ChatState to = 2;
  int64 chat_id = 3;
  // 只有to != -1(触发onNewSession)时, 会有值
  api.common.ChatItem chat = 4;
  int64 target = 5;
}

// 用户上线
message SCUserConnectionChanged {
  // 用户的 client_id (chat_id)
  int64 client_id = 1;
  api.common.ConnectState conn = 2;
  int64 target = 3;
}

enum WorkerChangedReason {
  WorkerChangedReasonUnknown = 0;
  // 找不到分配的客服
  WorkerChangedReasonMissAssignedWorker = 1;
  // 转接客服
  WorkerChangedReasonTransferWorker = 2;
  // 删除客服引起的会话转移(转移上级)
  WorkerChangedReasonWorkerDeleted = 3;
}

message SCWorkerChanged {
  int32 worker_id = 1;
  string worker_name = 2;
  string worker_avatar = 3;
  int64 target = 4;
  WorkerChangedReason reason = 5;
  // 咨询id
  int64 consult_id = 6;
}

enum KickReason {
  KickReasonCommon = 0;
  KickReasonPermChanged = 1;
}

// 内部用踢人
message SCKick {
  int64 target = 1;
  KickReason reason = 2;
  // 链接ID, 如果等于0忽略此参数只根据target踢人，如果不等于0只踢掉此socket链接
  uint64 socket_id    = 3;
}

// 模拟客服发消息
// 使用场景示例: 自动回复
message SCSimSendMessage {
  repeated api.common.Message msgs = 1;
  int64 worker = 2;
  // 用户的 client_id (chat_id)
  int64 target = 3;
}

message SCSimSendMessageToWorker {
  repeated api.common.Message msgs = 1;
  // 客服的 client_id
  int64 target = 2;
}

message SystemMessage {
  int64 target=1;
  oneof content{
      WorkerStateChange StateChange=2;
  }
}

message WorkerStateChange {
  api.common.OnlineState from=1;
  api.common.OnlineState to=2;
  bool access=3;
}