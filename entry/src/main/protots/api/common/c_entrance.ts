/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.26.1
 * source: api/common/c_entrance.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./c_device";
import * as dependency_2 from "./../../google/protobuf/timestamp";
import * as dependency_3 from "./../../validate/validate";
import * as dependency_4 from "./c_base";
import * as pb_1 from "google-protobuf";
export namespace api.common {
    export enum OperationsType {
        OPERATION_TYPE_UNKNOWN = 0,
        OPERATION_TYPE_WINDOWS = 10,
        OPERATION_TYPE_MAC_INTEL = 20,
        OPERATION_TYPE_MAC_M = 21,
        OPERATION_TYPE_END = 200
    }
    export enum ClientType {
        CLIENT_TYPE_UNKNOWN = 0,
        CLIENT_TYPE_WORKER_BEGIN = 1,
        CLIENT_TYPE_WORKER_PC = 2,
        CLIENT_TYPE_WORKER_END = 100,
        CLIENT_TYPE_USER_BEGIN = 101,
        CLIENT_TYPE_USER_H5 = 102,
        CLIENT_TYPE_USER_WEB = 103,
        CLIENT_TYPE_USER_APP = 104,
        CLIENT_TYPE_USER_END = 200
    }
    export class Entrance extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            entrance_id?: number;
            name?: string;
            nick?: string;
            avatar?: string;
            guide?: string;
            consult_ids?: number[];
            change_default_time?: string;
            h5_link?: string;
            web_link?: string;
            internal_parameters?: string;
            app_parameters?: string;
            access_link?: string;
            default_consult_id?: number;
            certificate?: string;
            worker_name?: string[];
            delete_at?: dependency_2.google.protobuf.Timestamp;
            disable_status?: dependency_4.api.common.DisableStatus;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6, 15], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("entrance_id" in data && data.entrance_id != undefined) {
                    this.entrance_id = data.entrance_id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("nick" in data && data.nick != undefined) {
                    this.nick = data.nick;
                }
                if ("avatar" in data && data.avatar != undefined) {
                    this.avatar = data.avatar;
                }
                if ("guide" in data && data.guide != undefined) {
                    this.guide = data.guide;
                }
                if ("consult_ids" in data && data.consult_ids != undefined) {
                    this.consult_ids = data.consult_ids;
                }
                if ("change_default_time" in data && data.change_default_time != undefined) {
                    this.change_default_time = data.change_default_time;
                }
                if ("h5_link" in data && data.h5_link != undefined) {
                    this.h5_link = data.h5_link;
                }
                if ("web_link" in data && data.web_link != undefined) {
                    this.web_link = data.web_link;
                }
                if ("internal_parameters" in data && data.internal_parameters != undefined) {
                    this.internal_parameters = data.internal_parameters;
                }
                if ("app_parameters" in data && data.app_parameters != undefined) {
                    this.app_parameters = data.app_parameters;
                }
                if ("access_link" in data && data.access_link != undefined) {
                    this.access_link = data.access_link;
                }
                if ("default_consult_id" in data && data.default_consult_id != undefined) {
                    this.default_consult_id = data.default_consult_id;
                }
                if ("certificate" in data && data.certificate != undefined) {
                    this.certificate = data.certificate;
                }
                if ("worker_name" in data && data.worker_name != undefined) {
                    this.worker_name = data.worker_name;
                }
                if ("delete_at" in data && data.delete_at != undefined) {
                    this.delete_at = data.delete_at;
                }
                if ("disable_status" in data && data.disable_status != undefined) {
                    this.disable_status = data.disable_status;
                }
            }
        }
        get entrance_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set entrance_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get nick() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set nick(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get avatar() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set avatar(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get guide() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set guide(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get consult_ids() {
            return pb_1.Message.getFieldWithDefault(this, 6, []) as number[];
        }
        set consult_ids(value: number[]) {
            pb_1.Message.setField(this, 6, value);
        }
        get change_default_time() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set change_default_time(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get h5_link() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set h5_link(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get web_link() {
            return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
        }
        set web_link(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get internal_parameters() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set internal_parameters(value: string) {
            pb_1.Message.setField(this, 10, value);
        }
        get app_parameters() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set app_parameters(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get access_link() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set access_link(value: string) {
            pb_1.Message.setField(this, 12, value);
        }
        get default_consult_id() {
            return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
        }
        set default_consult_id(value: number) {
            pb_1.Message.setField(this, 13, value);
        }
        get certificate() {
            return pb_1.Message.getFieldWithDefault(this, 14, "") as string;
        }
        set certificate(value: string) {
            pb_1.Message.setField(this, 14, value);
        }
        get worker_name() {
            return pb_1.Message.getFieldWithDefault(this, 15, []) as string[];
        }
        set worker_name(value: string[]) {
            pb_1.Message.setField(this, 15, value);
        }
        get delete_at() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 17) as dependency_2.google.protobuf.Timestamp;
        }
        set delete_at(value: dependency_2.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get has_delete_at() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get disable_status() {
            return pb_1.Message.getFieldWithDefault(this, 18, dependency_4.api.common.DisableStatus.DEFAULT) as dependency_4.api.common.DisableStatus;
        }
        set disable_status(value: dependency_4.api.common.DisableStatus) {
            pb_1.Message.setField(this, 18, value);
        }
        static fromObject(data: {
            entrance_id?: number;
            name?: string;
            nick?: string;
            avatar?: string;
            guide?: string;
            consult_ids?: number[];
            change_default_time?: string;
            h5_link?: string;
            web_link?: string;
            internal_parameters?: string;
            app_parameters?: string;
            access_link?: string;
            default_consult_id?: number;
            certificate?: string;
            worker_name?: string[];
            delete_at?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
            disable_status?: dependency_4.api.common.DisableStatus;
        }): Entrance {
            const message = new Entrance({});
            if (data.entrance_id != null) {
                message.entrance_id = data.entrance_id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.nick != null) {
                message.nick = data.nick;
            }
            if (data.avatar != null) {
                message.avatar = data.avatar;
            }
            if (data.guide != null) {
                message.guide = data.guide;
            }
            if (data.consult_ids != null) {
                message.consult_ids = data.consult_ids;
            }
            if (data.change_default_time != null) {
                message.change_default_time = data.change_default_time;
            }
            if (data.h5_link != null) {
                message.h5_link = data.h5_link;
            }
            if (data.web_link != null) {
                message.web_link = data.web_link;
            }
            if (data.internal_parameters != null) {
                message.internal_parameters = data.internal_parameters;
            }
            if (data.app_parameters != null) {
                message.app_parameters = data.app_parameters;
            }
            if (data.access_link != null) {
                message.access_link = data.access_link;
            }
            if (data.default_consult_id != null) {
                message.default_consult_id = data.default_consult_id;
            }
            if (data.certificate != null) {
                message.certificate = data.certificate;
            }
            if (data.worker_name != null) {
                message.worker_name = data.worker_name;
            }
            if (data.delete_at != null) {
                message.delete_at = dependency_2.google.protobuf.Timestamp.fromObject(data.delete_at);
            }
            if (data.disable_status != null) {
                message.disable_status = data.disable_status;
            }
            return message;
        }
        toObject() {
            const data: {
                entrance_id?: number;
                name?: string;
                nick?: string;
                avatar?: string;
                guide?: string;
                consult_ids?: number[];
                change_default_time?: string;
                h5_link?: string;
                web_link?: string;
                internal_parameters?: string;
                app_parameters?: string;
                access_link?: string;
                default_consult_id?: number;
                certificate?: string;
                worker_name?: string[];
                delete_at?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
                disable_status?: dependency_4.api.common.DisableStatus;
            } = {};
            if (this.entrance_id != null) {
                data.entrance_id = this.entrance_id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.nick != null) {
                data.nick = this.nick;
            }
            if (this.avatar != null) {
                data.avatar = this.avatar;
            }
            if (this.guide != null) {
                data.guide = this.guide;
            }
            if (this.consult_ids != null) {
                data.consult_ids = this.consult_ids;
            }
            if (this.change_default_time != null) {
                data.change_default_time = this.change_default_time;
            }
            if (this.h5_link != null) {
                data.h5_link = this.h5_link;
            }
            if (this.web_link != null) {
                data.web_link = this.web_link;
            }
            if (this.internal_parameters != null) {
                data.internal_parameters = this.internal_parameters;
            }
            if (this.app_parameters != null) {
                data.app_parameters = this.app_parameters;
            }
            if (this.access_link != null) {
                data.access_link = this.access_link;
            }
            if (this.default_consult_id != null) {
                data.default_consult_id = this.default_consult_id;
            }
            if (this.certificate != null) {
                data.certificate = this.certificate;
            }
            if (this.worker_name != null) {
                data.worker_name = this.worker_name;
            }
            if (this.delete_at != null) {
                data.delete_at = this.delete_at.toObject();
            }
            if (this.disable_status != null) {
                data.disable_status = this.disable_status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.entrance_id != 0)
                writer.writeUint32(1, this.entrance_id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.nick.length)
                writer.writeString(3, this.nick);
            if (this.avatar.length)
                writer.writeString(4, this.avatar);
            if (this.guide.length)
                writer.writeString(5, this.guide);
            if (this.consult_ids.length)
                writer.writePackedInt32(6, this.consult_ids);
            if (this.change_default_time.length)
                writer.writeString(7, this.change_default_time);
            if (this.h5_link.length)
                writer.writeString(8, this.h5_link);
            if (this.web_link.length)
                writer.writeString(9, this.web_link);
            if (this.internal_parameters.length)
                writer.writeString(10, this.internal_parameters);
            if (this.app_parameters.length)
                writer.writeString(11, this.app_parameters);
            if (this.access_link.length)
                writer.writeString(12, this.access_link);
            if (this.default_consult_id != 0)
                writer.writeInt32(13, this.default_consult_id);
            if (this.certificate.length)
                writer.writeString(14, this.certificate);
            if (this.worker_name.length)
                writer.writeRepeatedString(15, this.worker_name);
            if (this.has_delete_at)
                writer.writeMessage(17, this.delete_at, () => this.delete_at.serialize(writer));
            if (this.disable_status != dependency_4.api.common.DisableStatus.DEFAULT)
                writer.writeEnum(18, this.disable_status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Entrance {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Entrance();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.entrance_id = reader.readUint32();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.nick = reader.readString();
                        break;
                    case 4:
                        message.avatar = reader.readString();
                        break;
                    case 5:
                        message.guide = reader.readString();
                        break;
                    case 6:
                        message.consult_ids = reader.readPackedInt32();
                        break;
                    case 7:
                        message.change_default_time = reader.readString();
                        break;
                    case 8:
                        message.h5_link = reader.readString();
                        break;
                    case 9:
                        message.web_link = reader.readString();
                        break;
                    case 10:
                        message.internal_parameters = reader.readString();
                        break;
                    case 11:
                        message.app_parameters = reader.readString();
                        break;
                    case 12:
                        message.access_link = reader.readString();
                        break;
                    case 13:
                        message.default_consult_id = reader.readInt32();
                        break;
                    case 14:
                        message.certificate = reader.readString();
                        break;
                    case 15:
                        pb_1.Message.addToRepeatedField(message, 15, reader.readString());
                        break;
                    case 17:
                        reader.readMessage(message.delete_at, () => message.delete_at = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 18:
                        message.disable_status = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Entrance {
            return Entrance.deserialize(bytes);
        }
    }
    export class Consult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            consult_id?: number;
            name?: string;
            guide?: string;
            worker_group_ids?: number[];
            worker_ids?: number[];
            worker_group_names?: string;
            worker_names?: string;
            priority?: number;
            display?: number;
            default_worker_id?: number;
            default_worker_name?: string;
            delete_at?: dependency_2.google.protobuf.Timestamp;
            disable_status?: dependency_4.api.common.DisableStatus;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 5], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("consult_id" in data && data.consult_id != undefined) {
                    this.consult_id = data.consult_id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("guide" in data && data.guide != undefined) {
                    this.guide = data.guide;
                }
                if ("worker_group_ids" in data && data.worker_group_ids != undefined) {
                    this.worker_group_ids = data.worker_group_ids;
                }
                if ("worker_ids" in data && data.worker_ids != undefined) {
                    this.worker_ids = data.worker_ids;
                }
                if ("worker_group_names" in data && data.worker_group_names != undefined) {
                    this.worker_group_names = data.worker_group_names;
                }
                if ("worker_names" in data && data.worker_names != undefined) {
                    this.worker_names = data.worker_names;
                }
                if ("priority" in data && data.priority != undefined) {
                    this.priority = data.priority;
                }
                if ("display" in data && data.display != undefined) {
                    this.display = data.display;
                }
                if ("default_worker_id" in data && data.default_worker_id != undefined) {
                    this.default_worker_id = data.default_worker_id;
                }
                if ("default_worker_name" in data && data.default_worker_name != undefined) {
                    this.default_worker_name = data.default_worker_name;
                }
                if ("delete_at" in data && data.delete_at != undefined) {
                    this.delete_at = data.delete_at;
                }
                if ("disable_status" in data && data.disable_status != undefined) {
                    this.disable_status = data.disable_status;
                }
            }
        }
        get consult_id() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set consult_id(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get guide() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set guide(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get worker_group_ids() {
            return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
        }
        set worker_group_ids(value: number[]) {
            pb_1.Message.setField(this, 4, value);
        }
        get worker_ids() {
            return pb_1.Message.getFieldWithDefault(this, 5, []) as number[];
        }
        set worker_ids(value: number[]) {
            pb_1.Message.setField(this, 5, value);
        }
        get worker_group_names() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set worker_group_names(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get worker_names() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set worker_names(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get priority() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set priority(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get display() {
            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
        }
        set display(value: number) {
            pb_1.Message.setField(this, 9, value);
        }
        get default_worker_id() {
            return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
        }
        set default_worker_id(value: number) {
            pb_1.Message.setField(this, 10, value);
        }
        get default_worker_name() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set default_worker_name(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get delete_at() {
            return pb_1.Message.getWrapperField(this, dependency_2.google.protobuf.Timestamp, 12) as dependency_2.google.protobuf.Timestamp;
        }
        set delete_at(value: dependency_2.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get has_delete_at() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get disable_status() {
            return pb_1.Message.getFieldWithDefault(this, 13, dependency_4.api.common.DisableStatus.DEFAULT) as dependency_4.api.common.DisableStatus;
        }
        set disable_status(value: dependency_4.api.common.DisableStatus) {
            pb_1.Message.setField(this, 13, value);
        }
        static fromObject(data: {
            consult_id?: number;
            name?: string;
            guide?: string;
            worker_group_ids?: number[];
            worker_ids?: number[];
            worker_group_names?: string;
            worker_names?: string;
            priority?: number;
            display?: number;
            default_worker_id?: number;
            default_worker_name?: string;
            delete_at?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
            disable_status?: dependency_4.api.common.DisableStatus;
        }): Consult {
            const message = new Consult({});
            if (data.consult_id != null) {
                message.consult_id = data.consult_id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.guide != null) {
                message.guide = data.guide;
            }
            if (data.worker_group_ids != null) {
                message.worker_group_ids = data.worker_group_ids;
            }
            if (data.worker_ids != null) {
                message.worker_ids = data.worker_ids;
            }
            if (data.worker_group_names != null) {
                message.worker_group_names = data.worker_group_names;
            }
            if (data.worker_names != null) {
                message.worker_names = data.worker_names;
            }
            if (data.priority != null) {
                message.priority = data.priority;
            }
            if (data.display != null) {
                message.display = data.display;
            }
            if (data.default_worker_id != null) {
                message.default_worker_id = data.default_worker_id;
            }
            if (data.default_worker_name != null) {
                message.default_worker_name = data.default_worker_name;
            }
            if (data.delete_at != null) {
                message.delete_at = dependency_2.google.protobuf.Timestamp.fromObject(data.delete_at);
            }
            if (data.disable_status != null) {
                message.disable_status = data.disable_status;
            }
            return message;
        }
        toObject() {
            const data: {
                consult_id?: number;
                name?: string;
                guide?: string;
                worker_group_ids?: number[];
                worker_ids?: number[];
                worker_group_names?: string;
                worker_names?: string;
                priority?: number;
                display?: number;
                default_worker_id?: number;
                default_worker_name?: string;
                delete_at?: ReturnType<typeof dependency_2.google.protobuf.Timestamp.prototype.toObject>;
                disable_status?: dependency_4.api.common.DisableStatus;
            } = {};
            if (this.consult_id != null) {
                data.consult_id = this.consult_id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.guide != null) {
                data.guide = this.guide;
            }
            if (this.worker_group_ids != null) {
                data.worker_group_ids = this.worker_group_ids;
            }
            if (this.worker_ids != null) {
                data.worker_ids = this.worker_ids;
            }
            if (this.worker_group_names != null) {
                data.worker_group_names = this.worker_group_names;
            }
            if (this.worker_names != null) {
                data.worker_names = this.worker_names;
            }
            if (this.priority != null) {
                data.priority = this.priority;
            }
            if (this.display != null) {
                data.display = this.display;
            }
            if (this.default_worker_id != null) {
                data.default_worker_id = this.default_worker_id;
            }
            if (this.default_worker_name != null) {
                data.default_worker_name = this.default_worker_name;
            }
            if (this.delete_at != null) {
                data.delete_at = this.delete_at.toObject();
            }
            if (this.disable_status != null) {
                data.disable_status = this.disable_status;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.consult_id != 0)
                writer.writeUint32(1, this.consult_id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.guide.length)
                writer.writeString(3, this.guide);
            if (this.worker_group_ids.length)
                writer.writePackedInt64(4, this.worker_group_ids);
            if (this.worker_ids.length)
                writer.writePackedInt32(5, this.worker_ids);
            if (this.worker_group_names.length)
                writer.writeString(6, this.worker_group_names);
            if (this.worker_names.length)
                writer.writeString(7, this.worker_names);
            if (this.priority != 0)
                writer.writeInt32(8, this.priority);
            if (this.display != 0)
                writer.writeInt32(9, this.display);
            if (this.default_worker_id != 0)
                writer.writeInt32(10, this.default_worker_id);
            if (this.default_worker_name.length)
                writer.writeString(11, this.default_worker_name);
            if (this.has_delete_at)
                writer.writeMessage(12, this.delete_at, () => this.delete_at.serialize(writer));
            if (this.disable_status != dependency_4.api.common.DisableStatus.DEFAULT)
                writer.writeEnum(13, this.disable_status);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Consult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Consult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.consult_id = reader.readUint32();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.guide = reader.readString();
                        break;
                    case 4:
                        message.worker_group_ids = reader.readPackedInt64();
                        break;
                    case 5:
                        message.worker_ids = reader.readPackedInt32();
                        break;
                    case 6:
                        message.worker_group_names = reader.readString();
                        break;
                    case 7:
                        message.worker_names = reader.readString();
                        break;
                    case 8:
                        message.priority = reader.readInt32();
                        break;
                    case 9:
                        message.display = reader.readInt32();
                        break;
                    case 10:
                        message.default_worker_id = reader.readInt32();
                        break;
                    case 11:
                        message.default_worker_name = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.delete_at, () => message.delete_at = dependency_2.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 13:
                        message.disable_status = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Consult {
            return Consult.deserialize(bytes);
        }
    }
}
